(function(){"use strict";console.log("Codemirror inject script loaded"),function(){console.log("Starting CodeMirror detection");function C(){var t;console.log("Trying simplified approach");try{const n=document.querySelector(".CodeMirror");if(n){const e=n.CodeMirror;if(e)return console.log("Found CodeMirror 5 instance!"),{version:5,instance:e}}}catch(n){console.log("CodeMirror 5 approach failed:",n)}try{const n=document.querySelector(".cm-editor");if(n){const e=n.querySelector(".cm-content");if(e){const o=(t=e.cmView)==null?void 0:t.view;if(o)return console.log("Found CodeMirror 6 instance via cmView property!"),{version:6,instance:o}}}}catch(n){console.log("Direct cmView approach failed:",n)}return f()}function f(){console.log("Trying fallback methods for CM6");try{const t=document.querySelector(".cm-content");if(!t)return null;for(const n in t)if(n.startsWith("__")){const e=t[n];if(e&&typeof e=="object"&&e.view)return console.log("Found CM6 view via internal property:",n),{version:6,instance:e.view}}}catch(t){console.log("Internal property approach failed:",t)}return null}function i(){console.log("Attempting to expose CodeMirror");const t=C();if(!t){console.log("No CodeMirror instance found yet");return}const{version:n,instance:e}=t;if(n===5)window._cmInstance=e,setInterval(()=>{try{const o=e.getCursor(),r=e.getLine(o.line);console.log(`CM5 Cursor at line: ${o.line+1}, position: ${o.ch}`),window.postMessage({type:"CODEMIRROR_CURSOR_UPDATE",info:{lineNumber:o.line+1,position:o.ch,lineContent:r}},"*")}catch(o){console.error("Error in CM5 cursor tracking:",o)}},2e3);else if(n===6){window._cmView=e,setInterval(()=>{try{const o=e.state.selection.main.head,r=e.state.doc.lineAt(o);console.log(`CM6 Cursor at line: ${r.number}, position: ${o}`),window.postMessage({type:"CODEMIRROR_CURSOR_UPDATE",info:{lineNumber:r.number,position:o,lineContent:r.text}},"*")}catch(o){console.error("Error in CM6 cursor tracking:",o)}},2e3);try{e.dispatch=new Proxy(e.dispatch,{apply:(o,r,u)=>{try{const s=Reflect.apply(o,r,u),p=e.state.selection.main.head,m=e.state.doc.lineAt(p);return window.postMessage({type:"CODEMIRROR_CHANGE",info:{lineNumber:m.number,position:p,lineContent:m.text}},"*"),s}catch(s){return console.error("Error in dispatch proxy:",s),Reflect.apply(o,r,u)}}})}catch(o){console.error("Failed to proxy dispatch method:",o)}}window.postMessage({type:"CODEMIRROR_INSTANCE_FOUND",info:{version:n}},"*"),console.log(`CodeMirror ${n} detected and ready to use!`)}i();let c=0;const l=10,a=()=>{!window._cmView&&!window._cmInstance&&c<l&&(console.log(`Retry attempt ${c+1} of ${l}`),i(),c++,setTimeout(a,1e3))};setTimeout(a,1e3);const d=new MutationObserver(()=>{!window._cmView&&!window._cmInstance&&i()});d.observe(document.body,{childList:!0,subtree:!0}),window.addEventListener("unload",()=>{d.disconnect()}),window.postMessage({type:"INJECT_SCRIPT_LOADED"},"*"),console.log("Inject script fully loaded")}()})();
